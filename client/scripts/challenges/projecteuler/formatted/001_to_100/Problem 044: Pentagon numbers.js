
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 44: Pentagon numbers
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Pentagonal numbers are generated by the formula, $P_n=n(3n−1)/2$. The first ten pentagonal numbers are:</p>
/// <br>
/// <p class="euler__paragraph">1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...</p>
/// <br>
/// <p class="euler__paragraph">It can be seen that $P_4 + P_7 = 22 + 70 = 92 = P_8$. However, their difference, $70 − 22 = 48$, is not pentagonal.</p>
/// <br>
/// <p class="euler__paragraph">Find the pair of pentagonal numbers, $P_j$ and $P_k$, for which their sum and difference are pentagonal and $D = |Pk − Pj|$ is minimised; what is the value of $D$?</p></div>

/// challengeSeed:
function euler44() {
  // Good luck!
  return true;
}

euler44();

/// solutions:
function euler44() {
  function isPentagonal(num) {
    // Formula found by solving pentagonal number
    // equation for n.
    const n = (Math.sqrt((24 * num) + 1) + 1) / 6;
    return n % 1 === 0;
  }

  function pentagonal(num) {
    return (num * ((3 * num) - 1)) / 2;
  }

  let result;
  let i = 1;
  while (!result) {
    i++;
    const num1 = (i * ((3 * i) - 1)) / 2; // Pentagonal num formula
    const minDiff = num1 - (((i - 1) * ((3 * (i - 1)) - 1)) / 2);
    let j = i - 1;
    while (j > 0 && !result) {
      const num2 = (j * ((3 * j) - 1)) / 2;
      if (isPentagonal(num1 - num2) && isPentagonal(num1 + num2)) {
        result = num1 - num2;
      }
      j--;
    }
  }
  return result;
}

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler44 === 'function', 'message: <code>euler44()</code> is a function.');
assert.strictEqual(euler44(), 5482660, 'message: <code>euler44()</code> should return 5482660.');
/// id: 5900f3981000cf542c50feab
